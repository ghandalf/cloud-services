version: '3.7'

services:

   elasticsearch:
      container_name: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1
      ulimits:
       memlock:
          soft: -1
          hard: -1
      volumes:
        - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
        # - ./elasticsearch/config/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties:ro
        - elastic-data:/usr/share/elasticsearch/data
      ports: ['9200:9200', '9300:9300']
      healthcheck:
        test: ["CMD", "curl","-s" ,"-f", "-u", "elastic:changeme", "http://localhost:9200/_cat/health"]
        interval: 60s
        timeout: 60s
        retries: 6
      networks: ['analytic_net']

   logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:6.5.1
    environment: 
      - -Xms2g
      - -Xmx2g
    volumes: 
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - logstash-data:/usr/share/logstash/data
    ports: ['5044:5044', '9600:9600']
    healthcheck:
      test: ["CMD", "curl", "-XGET", "http://localhost:9600/?pretty"]
      interval: 60s
      timeout: 60s
      retries: 6
    depends_on: ['elasticsearch']
    networks: ['analytic_net']

   filebeat:
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:6.5.1
    user: root
    volumes:
      - ./beats/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./beats/filebeat/inputs.d/:/usr/share/filebeat/inputs.d/
      - ./beats/filebeat/modules.d/:/usr/share/filebeat/modules.d/
      - /var/lib/docker/containers:/var/log/docker/containers
      - filebeat-data:/usr/share/filebeat/data/
    command: --strict.perms=false
    restart: on-failure
    depends_on: ['elasticsearch', 'logstash']
    networks: ['analytic_net']
    healthcheck:
      test: filebeat test config
      interval: 30s
      timeout: 15s
      retries: 5

   packetbeat:
    container_name: packetbeat
    image: docker.elastic.co/beats/packetbeat:6.5.1
    user: root
    cap_add: ['NET_RAW', 'NET_ADMIN']
    volumes:
      - ./beats/packetbeat/packetbeat.yml:/usr/share/packetbeat/packetbeat.yml:ro
      - packetbeat-data:/usr/share/packetbeat/data
    command: --strict.perms=false -e 
    restart: on-failure
    depends_on: ['elasticsearch', 'logstash']
    network_mode: host 
    healthcheck:
      test: packetbeat test config
      interval: 30s
      timeout: 15s
      retries: 5

   heartbeat:
    container_name: heartbeat
    image: docker.elastic.co/beats/heartbeat:6.5.1
    volumes:
      - ./beats/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro
      - hearbeat-data:/usr/share/heartbeat/data
    command: --strict.perms=false -e  # -e flag to log to stderr and disable syslog/file output
    restart: on-failure
    depends_on: ['elasticsearch', 'logstash']
    networks: ['analytic_net']
    links: ['logstash']
    healthcheck:
      test: heartbeat test config
      interval: 30s
      timeout: 15s
      retries: 5

   metricbeat:
      container_name: metricbeat
      image: docker.elastic.co/beats/metricbeat:6.5.1
      user: root
      volumes:
        - ./beats/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
        - ./beats/metricbeat/modules.d/:/usr/share/metricbeat/modules.d:ro
        - /proc:/hostfs/proc:ro
        - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
        - /var/run/docker.sock:/var/run/docker.sock
        - /:/hostfs:ro
        - metricbeat-data:/data/server/analytic/metricbeat
      command: metricbeat -e -system.hostfs=/hostfs -strict.perms=false
      restart: on-failure
      depends_on: ['elasticsearch', 'logstash']
      networks: ['analytic_net']
      links: ['logstash']
      healthcheck:
        test: metricbeat test config
        interval: 30s
        timeout: 15s
        retries: 5

   apm-server:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:6.5.1
    volumes:
      - ./apm/apm-server/apm-server.yml:/usr/share/apm-server/apm-server.yml
    ports: ['8200:8200']
    restart: always
    depends_on: ['elasticsearch', 'logstash']
    networks: ['analytic_net']
    links: ['logstash']
    healthcheck:
      test: apm-server test config
      interval: 30s
      timeout: 15s
      retries: 5

   kibana:
      container_name: kibana
      image: docker.elastic.co/kibana/kibana:6.5.1
      volumes:
        - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
        - kibana-data:/usr/share/kibana/data
      ports: ['5601:5601']
      healthcheck:
        test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/login"]
        interval: 60s
        timeout: 60s
        retries: 6
      restart: always
      depends_on: ['elasticsearch']
      networks: ['analytic_net']

   dmi-nginx:
    container_name: dmi-nginx
    image: ghandalf/dmi-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    ports: ['80:80', '443:443']
    restart: always
    depends_on: ['kibana']
    networks: ['analytic_net']
    links: ['kibana']

volumes:
  elastic-data:
    driver: local
  kibana-data:
    driver: local
  logstash-data:
    driver: local
  filebeat-data:
    driver: local
  hearbeat-data:
    driver: local
  metricbeat-data:
    driver: local
  packetbeat-data:
    driver: local
    
networks: { analytic_net:{} }
