
   
   logstash:
    container_name: logstash
    hostname: logstash
    image: docker.elastic.co/logstash/logstash:6.4.3
    environment: 
      - "ELASTICSEARCH_PASSWORD=changeme"
      - "ELASTICSEARCH_URL=http://127.0.0.1:9200"
      #- "XPACK_MONITORING_ENABLED=true"
    volumes: 
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - logstash-data:/usr/share/logstash/data
    ports: ['5044:5044', '9600:9600']
    healthcheck:
      test: ["CMD", "curl", "-XGET", "http://elasticsearch:9600/?pretty"]
      interval: 60s     # default 30s
      timeout: 60s      # default 30s
      retries: 6        # default 3
    depends_on: ['elasticsearch']
    networks: ['analytic_net']

       # https://github.com/yeasy/docker-compose-files/blob/master/packetbeat_ek/packetbeat.yml
   packetbeat:
    container_name: packetbeat
    hostname: packetbeat
    user: root
    image: docker.elastic.co/beats/packetbeat:6.4.3
    environment: {} # We may need to get database metric.
    volumes:
      - ./beats/packetbeat/packetbeat.yml:/usr/share/packetbeat/packetbeat.yml
      #- packetbeat-data:/usr/share/packetbeat/data/packetbeat/
      #- packetbeat-log:/usr/share/packetbeat/logs/packetbeat/
    cap_add: ['NET_RAW', 'NET_ADMIN'] # Posix is used to grant privilege
    command: packetbeat setup --template -E output.logstash.enabled=false -E 'output.elasticsearch.hosts=["localhost:9200"]'
    restart: on-failure
    depends_on: ['elasticsearch', 'logstash']
    network_mode: host # packet in/out from host system
